##
#
# Language: English
# Author:   LucasEasedUp
#
##

aboutPlugin.header=&6============== &eLogIt&6 ==============
aboutPlugin.version=&7Version: &6{0}
aboutPlugin.author=&7Primary author: &6LucasEasedUp &7(aka LucasEU), currently being developed by: &6NorthPL&7.
startPlugin.success=&aLogIt has been started.
stopPlugin.success=&aLogIt has been stopped.
reloadPlugin.success=&aLogIt has been reloaded.
reloadPlugin.fail=&cLogIt could not be started back on.
firstRun=Thank you for choosing LogIt. I hope you like it.
updateAvailable=The update {0} is available to download at {1}.
serverMaintenance=&6The server is undergoing maintenance. Check back in a few moments.
noPerms=&cYou don't have permission to do that.
onlyForPlayers=&cOnly for players.
paramMissing=&cParameter missing: &7<{0}>
incorrectParamCombination=&cIncorrect combination of parameters.
invalidParam=&cInvalid parameter: &7<{0}>
typeForHelp=&7Type "/logit help" to display help for LogIt.
subCmdHelpLine=&6/{0}&7: {1}
subCmdDesc.help=Displays help for LogIt.
subCmdDesc.version=Shows current version of LogIt.
subCmdDesc.start=Starts LogIt.
subCmdDesc.stop=Stops LogIt.
subCmdDesc.reload=Reloads LogIt.
subCmdDesc.backup.force=Requests a forced backup.
subCmdDesc.backup.restore.filename=Restores a backup with the given filename.
subCmdDesc.backup.restore.time=Restores a backup that was created a certain time ago.
subCmdDesc.backup.remove=Removes a certain amount of backups (starting from the oldest).
subCmdDesc.gotowr=Teleports you to the waiting room.
subCmdDesc.globalpass=Generates a new global password usable for a limited period of time.
subCmdDesc.account.status=Shows the status of an account.
subCmdDesc.account.info=Shows information about an account.
subCmdDesc.account.rename=Renames an account.
subCmdDesc.account.datum=Shows desired entry datum of an account.
subCmdDesc.ipcount=Shows the number of accounts with a certain IP address.
subCmdDesc.config.get=Shows the value of a configuration property.
subCmdDesc.config.set=Changes the value of a configuration property.
subCmdDesc.config.list=Lists all configuration properties.
subCmdDesc.config.reload=Reloads the configuration file.
subCmdDesc.convert=Starts the LogIt Storage Conversion Wizard.
subCmdDesc.stats=Shows statistics for LogIt.
subCmdDesc.import.authme=Imports all accounts from AuthMe to LogIt.
cmdDisabled=&cCommand disabled.
cmdPlayerLock=&cWait for the previous command call to finish.
cmdUsage=&fUsage: &7/{0}&f{1}
cmdUsage.param=\ &f<{0}>&f
cmdUsage.missingParam=\ &c<{0}>&f
cmdUsage.optionalParam=\ &f[{0}]&f

coreNotStarted=&cThe LogIt core has not been started.
coreAlreadyStarted=&cThe LogIt core has already been started.
startCore.success=&aThe LogIt core has been successfully started.
startCore.fail=&cCould not start the LogIt core.
stopCore.confirm.areYouSure=&6== &eAre you sure you want to stop LogIt?&6 ==
stopCore.confirm.vulnerabilityInfo=&6If you proceed, this server will not\
\ require logging in of players any more.
stopCore.confirm.typeToConfirm=&6Type "&7stop&6" to stop LogIt, or anything else to cancel.
stopCore.success=&aThe LogIt core has been successfully stopped.
reloadConfig.success=&aThe configuration file has been successfully reloaded.\
\ Some settings may, however, require reloading the entire plugin.
reloadConfig.fail=&cAn error occurred while reloading the configuration file.
ipcount=&7Number of accounts with the IP address {0}: &6{1}

stats.header=&6==== &eLogIt Statistics&6 ====
stats.accountCount=&7Number of accounts registered: &6{0}
stats.uniqueIps=&7Number of unique IP addresses: &6{0}
stats.backupCount=&7Number of available backups: &6{0}
stats.logins=&7Number of logins: &6{0}
stats.passwordChanges=&7Number of password changes: &6{0}

accountStatus.header=&6============= &eAccount Status&6 =============
accountStatus.username=&7Username: &6{0}
accountStatus.status=&7Status: &6{0}
accountStatus.status.registered=&aRegistered
accountStatus.status.notRegistered=&cNot registered

accountInfo.header=&6============= &eAccount Info&6 =============
accountInfo.username=&7Username: &6{0}
accountInfo.ip=&7IP: &6{0}
accountInfo.email=&7E-mail: &6{0}
accountInfo.lastActiveDate=&7Last-active date: &6{0}
accountInfo.lastActiveDate.never=&7Last-active date: &6never
accountInfo.registrationDate=&7Registration date: &6{0}
accountInfo.registrationDate.never=&7Registration date: &6never
accountInfo.displayName=&7Display name: &6{0}
accountInfo.locked=&7This account has been locked using "&6/acclock <username>&7".\
\ To unlock it, type "&6/accunlock {0}&7".

accountRename.confirm=&6Are you sure you want to rename this account from "&e{0}&6" to "&e{1}&6"?\
\ Type "&7rename&6" to confirm or anything else to cancel.
accountRename.usernameInvalid=&cThis username contains invalid characters.
accountRename.usernameTooShort=&cThis username is too short (minimum length: &7{0}&c).
accountRename.usernameTooLong=&cThis username is too long (maximum length: &7{0}&c).
accountRename.usernameInvalid=&cThis username contains invalid characters.
accountRename.usernameProhibited=&cThis username is prohibited on this server.
accountRename.usernameTaken=&cThis username is already taken.
accountRename.success=&aSuccessfully renamed that account to "&7{0}&a".

accountDatum.keyNotFound=&cKey "&6{0}&c" does not exist.
accountDatum.result=&6{0}&7.&a{1} &7= &f{2}

createAccount.success.self=&aYou have been successfully registered.
createAccount.successAndLogin.self=&aYou have been successfully registered and logged in.
createAccount.success.others=&e{0}&a has been successfully registered.
createAccount.success.log=Account created {username: {0}\}
createAccount.fail.self=&cCould not register you.
createAccount.fail.others=&cCould not register &e{0}&c.
createAccount.fail.log=Account could not be created {username: {0}\}

alreadyRegistered.self=&cYou are already registered.
alreadyRegistered.others=&e{0}&c is already registered.
notRegistered.self=&cYou are not registered.
notRegistered.others=&e{0}&c is not registered.

removeAccount.success.self=&aYou have been unregistered.
removeAccount.success.others=&e{0}&a has been unregistered.
removeAccount.success.log=Account removed {username: {0}\}
removeAccount.fail.self=&cCould not unregister you.
removeAccount.fail.others=&cCould not unregister &e{0}&c.
removeAccount.fail.log=Account could not be removed {username: {0}\}
removeAccount.indirectAccountRemoval=&cTo unregister yourself,\
\ use the command &7/unregister [password]&c.
removeAccount.sessionEnded=&7You have been logged out.

changePassword.success.self=&aYour password has been changed.
changePassword.success.others=&e{0}&a has had their password changed.
changePassword.fail.self=&cCould not change your password.
changePassword.fail.others=&e{0}&c could not have had their password changed.

recoverPassword.success.self=&aAn e-mail with your new password has been to &7{0}&a.
recoverPassword.success.others=&aAn e-mail with a new password for &e{0}&a has been sent.
recoverPassword.success.log=An e-mail with a new password for "{0}" has been to be sent to "{1}".
recoverPassword.fail.self=&cCould not send a password recovery e-mail.\
\ Try again later or contact server administrator.
recoverPassword.fail.others=&cCould not send a password recovery e-mail for &e{0}&c.
recoverPassword.fail.log=Could not send a password recovery e-mail for "{0}".
recoverPassword.incorrectEmailAddress=&cIncorrect e-mail address.

changeEmail.success.self=&aYour e-mail address has been changed to &6{0}&a.
changeEmail.success.others=&e{0}&a has had their e-mail address changed to &6{1}&a.
changeEmail.fail.self=&cCould not change your e-mail address.
changeEmail.fail.others=&e{0}&c could not have had their e-mail address changed to {1}.
changeEmail.invalidEmailAddress=&cInvalid e-mail address.
noEmailSet=&6To be able to recover your password if you ever forget it,\
\ set your e-mail address using &7/changeemail <newemail>&6.

takeover.success=&aYou have successfully taken over this account.
takeover.fail=&cCould not take over this account.
takeover.prompt=&6If this account wasn't created by you,\
\ you can take over it using &7/register <password> <confirmpassword>&6.

config.get.property=&3{0}&7: {1}
config.set.success=&aProperty &6{0}&a set to &6{1}&a.
config.set.success.log=Property "{0}" set to "{1}".
config.set.fail=&cProperty &6{0}&c could not be changed. &7Cause: {1}
config.set.fail.log=Property "{0}" could not be changed.
config.set.reloadPlugin=&7Reload LogIt using "&l/logit reload&r&7" for changes to take effect.
config.propertyNotFound=&cProperty &6{0}&c not found.
config.list.header1=You are browsing page {0} out of total {1} pages.
config.list.header2=&7To switch between pages, use &9/logit config list &2<page>&7.
config.list.header3===================================================
config.list.property=&3{0}&7: {1}
config.list.noProperties=&7No properties on this page.

profile.view.header=&6&l{0} Profile
profile.view.profileNotFound=&cProfile not found.
profile.view.noFields=&6There is no information in this profile.
profile.view.field=&6{0}: &7{1}

profile.edit.header=&6&l{0} Profile
profile.edit.noFields=&6Unfortunately, there are no editable fields.
profile.edit.field=&6(&f{0}&6) {1}: &7{2}
profile.edit.updatedField=&6(&f{0}&6) &a{1}&6: &7{2}
profile.edit.chooseAction=&6Type "&7edit&6" to edit a field, "&7erase&6" to erase a field,\
\ or "&7done&6" to close the wizard:
profile.edit.enterFieldNumber=&6Enter number of a field:
profile.edit.unknownField=&cUnknown field. Try again:

profile.edit.enterFieldValue.string=&6{0}:
profile.edit.enterFieldValue.integer=&6{0}:
profile.edit.enterFieldValue.float=&6{0}:
profile.edit.enterFieldValue.set=&6{0} ({1})&6:
profile.edit.enterFieldValue.set.value=&7{0}&6
profile.edit.enterFieldValue.set.separator=, 

profile.edit.invalidValue=&7{0}&c is an invalid value. Try again:
profile.edit.stringTooShort=&7{0}&c must not be shorter than &7{1}&c. Try again:
profile.edit.stringTooLong=&7{0}&c must not be longer than &7{1}&c. Try again:
profile.edit.numberTooSmall=&7{0}&c must not be less than &7{1}&c. Try again:
profile.edit.numberTooBig=&7{0}&c must not be greater than &7{1}&c. Try again:

join.beautified=&7{0} &f[&a+&f]{1}
join.beautified.inWorld=\ &7(in "&8{0}&7")
join.native=\u00A7e{0} joined the game{1}.
join.native.inWorld=\ (in "\u00A76{0}\u00A7e")
quit.beautified=&7{0} &f[&c-&f]
quit.native=\u00A7e{0} left the game.

createSession.success.log=Session created {username: {0}\}
destroySession.success.log=Session destroyed {username: {0}\}
startSession.success.self=&aYou have been logged in.
startSession.success.others=&e{0}&a has been logged in.
startSession.success.log=Session started {username: {0}\}
startSession.fail.self=&cCould not log you in.
startSession.fail.others=&cCould not log in &e{0}&c.
alreadyLoggedIn.self=&cYou are already logged in.
alreadyLoggedIn.others=&e{0}&c is already logged in.
notLoggedIn.self=&cYou are not logged in.
notLoggedIn.others=&e{0}&c is not logged in.
endSession.success.self=&aYou have been logged out.
endSession.success.others=&e{0}&a has been logged out.
endSession.success.log=Session ended {username: {0}\}
automaticallyLoggedOut=&dYou have been logged out due to inactivity.

pleaseLogIn=&cPlease, log in using &7/login <password>&c.
pleaseLogIn_noPassword=&cPlease, log in using &7/login&c.
pleaseRegister=&cPlease, register using &7/register <password> <confirmpassword>&c.
pleaseRegister_noPassword=&cPlease, register using &7/register&c.
pleaseRegister_withCode=&cPlease, register using &7/register <haslo> <potwierdzhaslo> {0}&c.
pleaseRegister_noPassword_withCode=&cPlease, register using &7/register {0}&c.
invalidRegisterCode=&cInvalid code.

rememberLogin.prompt=&6Type &7/remember&6 to be automatically logged in on this computer.
rememberLogin.success=&aFrom now on, you will be automatically logged in for &6{0}&a\
\ until you manually log out.
rememberLogin.fail=&cCould not remember your login.

globalpass.generated=&eThe generated global password: &7{0}
globalpass.invalidationInfo=&7It will be invalidated after {0}.

usernameAlreadyUsed=&cAnother player is already logged in with your username.
usernameBlank=&cYour username is blank.
usernameInvalid=&cYour username contains invalid characters.
usernameProhibited=&cYour username is prohibited on this server.
usernameTooShort=&cYour username is too short (minimum length: {0}).
usernameTooLong=&cYour username is too long (maximum length: {0}).
usernameCaseMismatch.warning=&eYou have joined in with a name that differs in letter-case\
\ from the one you have provided in the registration process (e.i. &7{0}&e).\
\ It is advised that you rejoin using the correct-case name,\
\ otherwise continuing may result in unexpected errors or bugs.
usernameCaseMismatch.kick=&cYou have joined in with a name that differs in letter-case\
\ from the one you have provided in the registration process (e.i. &7{0}&c).\
\ Please, rejoin using the correct-case name.

incorrectPassword=&cIncorrect password.
passwordTooShort=&cPassword too short (minimum length: {0}).
passwordTooLong=&cPassword too long (maximum length: {0}).
passwordsDoNotMatch=&cPasswords do not match.

createBackup.creating=&7Creating a backup...
createBackup.success=&aBackup "&7{0}&a" has been successfully created.
createBackup.success.log=Backup "{0}" has been created.
createBackup.fail=&cCould not back up the storage.
createBackup.fail.log=Could not back up the storage.
createBackup.willBeCreated=&7A backup will be created as soon as possible.
restoreBackup.success=&aBackup "&7{0}&a" has been restored.
restoreBackup.success.log=Backup "{0}" has been restored.
restoreBackup.fail=&cCould not restore the backup.
restoreBackup.fail.log=Could not restore a backup.
restoreBackup.backupNotFound=&cThe backup "&7{0}&c" does not exist.
restoreBackup.noBackups=&cNo backups available.
restoreBackup.confirm.header=&6=== &eBackup Restore Confirmation&6 ===
restoreBackup.confirm.typeToProceed=&7Type "&fproceed&7" to confirm restoring the following backup:
restoreBackup.confirm.filename=\   &7Filename: &f{0}
restoreBackup.confirm.date=\   &7Date of Creation: &f{0}
restoreBackup.confirm.typeToCancel=&7Or type anything else to cancel restoring.
removeBackups.success=&aRemoved {0} backups.
removeBackups.fail=&aCould not remove backups.
removeBackups.noBackupsSelected=&7No backups selected.
removeBackups.noBackupsAvailable=&7No backups available.
removeBackups.confirm.header=&6=== &eBackup Removal Confirmation&6 ===
removeBackups.confirm.typeToRemove.range=&7Type "&fremove&7" to confirm removing backups.
removeBackups.confirm.typeToRemove.single=&7Type "&fremove&7" to confirm removing the following backup:
removeBackups.confirm.amount=|  &7Number of backups: &f{0}
removeBackups.confirm.limitedAmount=|  &7Number of backups: &f{0} &8(limited)
removeBackups.confirm.date.single=|  &7Backup date: &f{0}
removeBackups.confirm.date.range.start=|  &7Start date: &f{0}
removeBackups.confirm.date.range.end=|  &7End date: &f{0}
removeBackups.confirm.typeToCancel=&7Or type anything else to cancel.

wizardCancelled=&7Wizard cancelled.
wizard.orangeHorizontalLine=&6================================================

wizard.convert.welcome=&6Welcome to the &lLogIt Storage Conversion Wizard&r&6.
wizard.convert.welcomeChoice=&6Type "&7proceed&6" to continue, anything else will exit the wizard.

wizard.convert.enterStorageType=&6Enter the desired storage type\
\ (&7sqlite&6, &7mysql&6, &7h2&6, &7csv&6):
wizard.convert.enterFilename=&6Enter filename:
wizard.convert.enterHost=&6Enter host:
wizard.convert.enterUser=&6Enter user:
wizard.convert.enterPassword=&6Enter password:
wizard.convert.enterDatabaseName=&6Enter database name:
wizard.convert.enterUnit=&6Enter table:

wizard.convert.unknownStorageType=&c"&7{0}&c" is not a valid storage type.
wizard.convert.unknownStorageType.tryAgain=&6Try again:

wizard.convert.selectedStorageType=&6Selected storage type: &7{0}
wizard.convert.enteredFilename=&6Entered filename: &7{0}
wizard.convert.enteredHost=&6Entered host: &7{0}
wizard.convert.enteredUser=&6Entered user: &7{0}
wizard.convert.enteredPassword=&6Entered password: &7{0}
wizard.convert.enteredDatabaseName=&6Entered database name: &7{0}
wizard.convert.enteredUnit=&6Entered table: &7{0}

wizard.convert.copyOrSkip=&6Do you wish to copy accounts to the new storage?\
\ Type "&7copy&6" to copy accounts, or anything else to skip this step.
wizard.convert.finishChoice=&6Type "&7proceed&6" to finish conversion,\
\ anything else will cancel conversion:

wizard.convert.success=&aThe storage has been successfully converted.
wizard.convert.success.log=The storage has been successfully converted.
wizard.convert.fail=&cStorage conversion failed. &7Stack trace has been printed to the console.
wizard.convert.fail.log=Storage conversion failed.

noSlotsFree=&cNo slots free on this server.
kickUnregistered=&cYou are not registered on this server.
tooManyLoginFails.kick=&cYou've been kicked because of too many login fails.
tooManyLoginFails.ban=&cYou've been banned because of too many login fails.
tooManyLoginFails.blockLoggingIn=&cYou have to wait &7{0}&c.
forcedLoginTimeout=&cYou have timed out while being logged out.

acclock.success.self=&6Your account has been locked.
acclock.success.others=&e{0}&a has successfully had their account locked.
acclock.cannotLockYourself=&cYou cannot lock your account by yourself.\
\ It must be done by someone else.

accunlock.success.self=&aYour account has been unlocked.
accunlock.success.others=&e{0}&a has successfully had their account unlocked.
accunlock.cannotUnlockYourself=&cYou cannot unlock your account by yourself.\
\ It must be done by someone else.

loginHistory.header=&6============= &eLogin history&6 =============
loginHistory.record.success=&f[&a+&f] &7{0}: &6{1}{2}
loginHistory.record.fail=&f[&c-&f] &7{0}: &6{1}{2}
loginHistory.record.repetition=\ &7({0})
loginHistory.record.ipDitto=\ " " " "

import.authme.header=&6============= &eImport from AuthMe&6 =============
import.authme.typeToImport=&6Type "&7import&6" to confirm your decision,\
\ importing all accounts from AuthMe to LogIt. Anything else will cancel this wizard.
import.authme.folderNotFound=&cAuthMe folder not found.
import.authme.configNotFound=&cAuthMe configuration file not found.
import.authme.fileNotFound=&cFile "&7{0}&c" not found.
import.authme.configPropNotFound=&cConfiguration property "&7{0}&c" not found\
\ in the AuthMe configuration.
import.authme.unsupportedEncryptionMethod=&cUnsupported encryption method: &7{0}
import.authme.success=&aSuccessfully imported {0} accounts from AuthMe.

playerNotOnline=&e{0}&c is not online.
accountsPerIpLimitReached=&cYou've registered too many times using this IP address.
accountsPerEmailLimitReached=&cThis e-mail address has already been used too many times.\
\ Choose another one.
unexpectedError=&cUnexpected error occurred.
cooldown.moreThanSecond=&cYou have to wait &7{0}&c before you do that again.
cooldown.secondOrLess=&cYou have to wait a second before you do that again.
